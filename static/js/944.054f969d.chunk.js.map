{"version":3,"file":"static/js/944.054f969d.chunk.js","mappings":"6UAoBMA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,KACpBC,GAAUF,EAAAA,EAAAA,GAAOG,EAAAA,KAmGvB,UAjGc,WACZ,IAAMC,GAAQC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,KAAf,IAC5BI,GAAWC,EAAAA,EAAAA,KACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAUA,OAAIZ,GACK,SAAC,KAAD,CAAUa,GAAG,eAIpB,UAAC,IAAD,CACEC,cAAc,SACdC,MAAM,QACNC,OAAO,OACPC,eAAe,SACfC,WAAW,SALb,WAOE,UAAC,IAAD,CACEC,QAAQ,SACRC,GAAG,IACHH,eAAe,SACfC,WAAW,SAJb,WAME,SAAC,IAAD,CAAQG,GAAG,cACX,SAAC,IAAD,CAASC,MAAM,WAAf,sBACA,SAAC,KAAD,CAAKC,KAAM,CAAEC,KAAM,MAAOC,GAAI,SAA9B,UACE,iBAAMC,SA3BiD,SAACC,GAC9DA,EAAEC,iBACF,IAAMC,EAAc,CAACtB,MAAAA,EAAOE,SAAAA,GAC5BL,GAAS0B,EAAAA,EAAAA,IAAMD,GAChB,EAuBO,UACE,UAAC,IAAD,CACEE,QAAS,EACTC,EAAE,OACFC,gBAAgB,iBAChBC,UAAU,KAJZ,WAME,SAAC,KAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CACEC,cAAc,OACdC,UAAU,SAACzC,EAAD,CAAY2B,MAAM,gBAE9B,SAAC,EAAAe,EAAD,CACEC,MAAO/B,EACPgC,SAAU,SAAAZ,GAAC,OAAInB,EAASmB,EAAEa,OAAOF,MAAtB,EACXG,KAAK,QACLC,YAAY,wBAIlB,SAAC,KAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CACEP,cAAc,OACdb,MAAM,WACNc,UAAU,SAACtC,EAAD,CAASwB,MAAM,gBAE3B,SAAC,EAAAe,EAAD,CACEC,MAAO7B,EACP8B,SAAU,SAAAZ,GAAC,OAAIjB,EAAYiB,EAAEa,OAAOF,MAAzB,EACXG,KAAM9B,EAAe,OAAS,WAC9B+B,YAAY,cAEd,SAAC,IAAD,CAAmB3B,MAAM,SAAzB,UACE,SAAC,IAAD,CAAQ4B,EAAE,UAAUC,KAAK,KAAKC,QAhExB,kBAAMjC,GAAiBD,EAAvB,EAgEN,SACGA,EAAe,OAAS,iBAKjC,SAAC,IAAD,CACEmC,aAAc,EACdL,KAAK,SACLM,QAAQ,QACRC,YAAY,OACZjC,MAAM,OALR,8BAaR,UAAC,KAAD,0BACa,SAAC,KAAD,CAAMF,GAAG,YAAT,0BAIlB,C","sources":["components/Login/Login.tsx"],"sourcesContent":["import { useState } from 'react';\nimport {\n  Flex,\n  Heading,\n  Input,\n  Button,\n  InputGroup,\n  Stack,\n  InputLeftElement,\n  chakra,\n  Box,\n  Avatar,\n  FormControl,\n  InputRightElement,\n} from '@chakra-ui/react';\nimport { FaUserAlt, FaLock } from 'react-icons/fa';\nimport { Link, Navigate } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks/hooks';\nimport { logIn } from '../../redux/auth/authThunks';\n\nconst CFaUserAlt = chakra(FaUserAlt);\nconst CFaLock = chakra(FaLock);\n\nconst Login = () => {\n  const token = useAppSelector(state => state.auth.token);\n  const dispatch = useAppDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowClick = () => setShowPassword(!showPassword);\n\n  const onSubmitLogin: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault()\n    const credentials = {email, password}\n    dispatch(logIn(credentials))\n  }\n\n  if (token) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      width=\"100wh\"\n      height=\"90vh\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Stack\n        flexDir=\"column\"\n        mb=\"2\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Avatar bg=\"teal.500\" />\n        <Heading color=\"teal.400\">Welcome</Heading>\n        <Box minW={{ base: '90%', md: '410px' }}>\n          <form onSubmit={onSubmitLogin}>\n            <Stack\n              spacing={4}\n              p=\"1rem\"\n              backgroundColor=\"whiteAlpha.900\"\n              boxShadow=\"md\"\n            >\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<CFaUserAlt color=\"gray.300\" />}\n                  />\n                  <Input\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                    type=\"email\"\n                    placeholder=\"email address\"\n                  />\n                </InputGroup>\n              </FormControl>\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    color=\"gray.300\"\n                    children={<CFaLock color=\"gray.300\" />}\n                  />\n                  <Input\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                      {showPassword ? 'Hide' : 'Show'}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Button\n                borderRadius={0}\n                type=\"submit\"\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                width=\"full\"\n              >\n                Login\n              </Button>\n            </Stack>\n          </form>\n        </Box>\n      </Stack>\n      <Box>\n        New to us? <Link to=\"/register\">Sign Up</Link>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Login;\n"],"names":["CFaUserAlt","chakra","FaUserAlt","CFaLock","FaLock","token","useAppSelector","state","auth","dispatch","useAppDispatch","useState","email","setEmail","password","setPassword","showPassword","setShowPassword","to","flexDirection","width","height","justifyContent","alignItems","flexDir","mb","bg","color","minW","base","md","onSubmit","e","preventDefault","credentials","logIn","spacing","p","backgroundColor","boxShadow","pointerEvents","children","I","value","onChange","target","type","placeholder","h","size","onClick","borderRadius","variant","colorScheme"],"sourceRoot":""}